# Generated by Django 5.2.6 on 2025-09-30 13:55

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('responders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmergencyReport',
            fields=[
                ('report_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the emergency report.', primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('Fire', 'Fire Emergency'), ('Crime', 'Crime Emergency'), ('Disaster', 'Disaster Emergency'), ('Ambulance', 'Ambulance/Medical Emergency'), ('Domestic Violence', 'Domestic Violence'), ('Medical Crisis', 'Medical Crisis'), ('Flood', 'Flood'), ('Other', 'Other Emergency')], help_text='Type of emergency being reported.', max_length=50)),
                ('latitude', models.DecimalField(decimal_places=6, help_text='Latitude of the emergency location.', max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, help_text='Longitude of the emergency location.', max_digits=9)),
                ('description', models.TextField(blank=True, help_text='Detailed textual description of the emergency.')),
                ('voice_report_url', models.URLField(blank=True, help_text='URL to an audio file of the voice-assisted report.', null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In-Progress', 'In-Progress Aiding'), ('Resolved', 'Resolved'), ('Rejected', 'Rejected')], default='Pending', help_text='Current status of the emergency report.', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Date and time when the report was submitted.')),
                ('resolution_notes', models.TextField(blank=True, help_text='Notes on how the emergency was resolved.')),
                ('assigned_to_responder_unit', models.ForeignKey(blank=True, help_text='The responder unit assigned to this emergency.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_reports', to='responders.responderunit')),
                ('reported_by', models.ForeignKey(blank=True, help_text='The user who reported the emergency (can be null for anonymous guests).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emergency_reports', to='accounts.userprofile')),
                ('resolved_by', models.ForeignKey(blank=True, help_text='The user (responder/LGU) who marked the emergency as resolved.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_emergencies', to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ReportMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('Image', 'Image'), ('Video', 'Video'), ('Audio', 'Audio')], help_text='Type of media (image, video, or audio).', max_length=10)),
                ('file', models.FileField(help_text='The media file (image, video, or audio).', upload_to='emergency_media/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the media was uploaded.')),
                ('report', models.ForeignKey(help_text='The emergency report this media belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='media', to='emergencies.emergencyreport')),
            ],
        ),
        migrations.CreateModel(
            name='ResponseTimeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dispatch_time', models.DateTimeField(blank=True, help_text='Timestamp when the responder unit was dispatched.', null=True)),
                ('arrival_time', models.DateTimeField(blank=True, help_text='Timestamp when the responder unit arrived at the scene.', null=True)),
                ('resolution_time', models.DateTimeField(blank=True, help_text='Timestamp when the emergency was marked as resolved.', null=True)),
                ('report', models.OneToOneField(help_text='The emergency report associated with this log.', on_delete=django.db.models.deletion.CASCADE, related_name='response_time_log', to='emergencies.emergencyreport')),
            ],
        ),
        migrations.CreateModel(
            name='VerificationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Expired', 'Expired')], default='Pending', max_length=20)),
                ('emergency_report', models.ForeignKey(help_text='The emergency report this verification request is for.', on_delete=django.db.models.deletion.CASCADE, related_name='verification_requests', to='emergencies.emergencyreport')),
                ('targeted_users', models.ManyToManyField(help_text='Users who received this verification request.', related_name='verification_requests', to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='VerificationResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('responded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(help_text='The user who responded.', on_delete=django.db.models.deletion.CASCADE, related_name='verification_responses', to='accounts.userprofile')),
                ('verification_request', models.ForeignKey(help_text='The verification request this response is for.', on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='emergencies.verificationrequest')),
            ],
            options={
                'unique_together': {('verification_request', 'user')},
            },
        ),
    ]
